#include <stdio.h>
#include <stdlib.h>

#define Deck_Size 53
#define Quit q
#define initialize p
#define GetNext y
#define NoMore n

int getrandomnumber(int upper);
void InitializeDeck (int deck[]);
void ShuffleDeck(int deck[]);
void DisplayRank(int card);
void DisplaySuit(int card);
void DisplayCard(int card);
int deck[];
int play();
int PlayerTurn1(int playerturn, int botturn);
int determinecardvalue(int card);


int main()
  {
    char Choice;
    printf("Welcome to Black Jack!\nPress P to play\nPress Q at any time to quit");
    scanf("%c", Choice);

    switch(Choice)
    {
    case 'p':
        {
           system("cls");
           play();

        }

    case 'q':
    {
        printf("program closing");
        return 0;
    }


    }





  }

void InitializeDeck(int deck[])
{
    int index;
    for(index = 0; index<Deck_Size; index++)
    {
        deck[index]= index;
    }
}



// Shuffle the deck by resorting array

void ShuffleDeck(int deck[])
{
    int upperindex = 51, temp;
    int randindex;

    for(upperindex; upperindex>0; upperindex--)
    {
        randindex = getrandomnumber(upperindex);
        temp = deck[upperindex];
        deck[upperindex]= deck[randindex];
        deck[randindex] = temp;
    }


}

void DisplayRank(int card)
{
    int rank = card % 13;
    if(rank==0)
    {
        printf("A");
    }
    if(rank==1)
    {
        printf("2");
    }
    if(rank==2)
    {
        printf("3");
    }
    if(rank==3)
    {
        printf("4");
    }
    if(rank==4)
    {
        printf("5");
    }
    if(rank==5)
    {
        printf("6");
    }
    if(rank==6)
    {
        printf("7");
    }
    if(rank==7)
    {
        printf("8");
    }
    if(rank==8)
    {
        printf("9");
    }
    if(rank==9)
    {
        printf("10");
    }

    if (rank==10)
    {
        printf("J");
    }
    if(rank==11)
    {
        printf("Q");
    }
    if(rank==12)
    {
        printf("K");
    }

}


void DisplaySuit(int card)
{
    int suit = card/13;

    if(suit == 0)
    {
        printf("Heart");
    }
     else if(suit==1)
    {
        printf("Diamond");
    }
    else if(suit==2)
    {
        printf("Spade");
    }
    else if(suit==3)
    {
        printf("club");
    }
}

DisplayCard(int card)
{
    DisplayRank(card);
    DisplaySuit(card);
}
//Returns a random number

 int getrandomnumber(int upper)
 {
     return rand() % upper;
 }

int determinecardvalue(int card)
{
    int cardvalue;

    cardvalue = card % 13;

    switch(cardvalue)
    {
        case 0:
        {
            return 1;
            break;
        }
        case 1:
        {
            return 2;
            break;
        }
        case 2:
        {
            return 3;
            break;
        }
        case 3:
        {
            return 4;
            break;
        }
        case 4:
        {
            return 5;
            break;
        }
        case 5:
        {
            return 6;
            break;
        }
        case 6:
        {
            return 7;
            break;
        }
        case 7:
        {
            return 8;
            break;
        }
        case 8:
        {
            return 9;
            break;
        }
        case 9:
        {
            return 10;
            break;
        }
        case 10:
        {
            return 10;
            break;
        }
        case 11:
            {
                return 10;
                break;
            }
        case 12:
            {
                return 10;
                break;
            }


    }


}











 /***

 Problems:

 1. Need to figure out how to print score
 */


 int play()
 {
     char Option;

     int CherryYou = 10;
     int CherryBot = 10;
     int q;
     char start;



  printf("********Instructions\n\nYour goal is to get as close to a score of 21, without going over\n Keep drawing cards by pressing y \n press n to end your turn");
  printf("\npress any key to continue");
  do
  {
    scanf("%c", start);
     system("cls");



  printf("Your Cherries: %i                                 Bot Cherries: %i\n\n\n\n\n" ,CherryYou,CherryBot);
  printf("Press Y to get next card, press N to keep your ammount");

  ShuffleDeck(deck[]);
  }

  while(CherryBot!=0 && CherryYou!=0)
  {
      int RoundResult;

      RoundResult = PlayerTurn1(0,0,0,0);

     //if player turn is won
     if (RoundResult == 0)
     {
         CherryYou = CherryYou + 1
         CherryBot = CherryBot -1
     }
     else if (RoundResult == 1)
     {
         CherryYou = CherryYou - 1
         CherryBot = CherryBot + 1
     }

     system("cls");
     printf("Your Cherries: %i                                 Bot Cherries: %i\n\n\n\n\n" ,CherryYou,CherryBot);
     printf("Your score:    %i                                 Bot Score:    %i\n\n", playersum,botsum);
     printf("Press Y to get next card, press N to keep your ammount");






  }









 }

 /***** plays out each turn, returns 0 if player won and 1 if player lost. */
 int PlayerTurn1(int playerturn, int botturn, int playersum, intbotsum)
{

     int card1;
     int card2;
     int i=0;
    //while their turn hasnt ended
      while(playerturn=0 || botturn=0)
      {

          if(playerturn!=1)
          {
            do
             {
              scanf("%c", &Option);
             }while(option!= 'y'||option!='n')
          }



            switch(Option)
             {
              //if they choose to draw another card
                case 'y':
                {

                    card1 = deck[i];
                    i++;
                    if(i==52);
                    {
                        ShuffleDeck(deck[]);
                        i=0;
                    }
                    playersum = playersum + determinecardvalue(card1);
                    printf("your card:");
                    DisplayCard(card1);
                    printf("\nYour score: %i",playersum);

                    if(playersum>21 && playerturn != 1)
                        {
                            playersum = 0
                            playerturn = 1;
                        }
                    break;
                }
             //if they choose to end their turn
                case 'n'
                {
             playerturn = 1;
             break;
                }

           }
          // bot will keep drawing if he has less than 15 points and will be eliminated
          switch(botsum)
          {
              case (botsum<15):
              {
                  card2 = deck[i];
                  i++;
                  if(i==52)
                  {
                    ShuffleDeck(deck[]);
                        i=0;
                  }
                  botsum = botsum + determinecardvalue(card2);
                  if(botsum>21)
                  {
                      botsum = 0;
                      botturn= 1;
                  }
                  break;
             }
             case (botsum>15)
             {
                 botturn =1;
             }
             break;
          }
         }
      //Exits the while loop and returns whether the player won or lost

      if(playersum>botsum)
      {
          return 0;
      }
      else
      {
          return 1;
      }
}

